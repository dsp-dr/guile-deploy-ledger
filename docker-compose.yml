version: '3.8'

services:
  deploy-ledger:
    build:
      context: .
      target: runtime
    image: guile-deploy-ledger:latest
    container_name: deploy-ledger
    ports:
      - "8080:8080"    # Webhook server
      - "37146:37146"  # Guile REPL server
    volumes:
      - ./data:/var/lib/deploy-ledger
      - ./src:/opt/guile-deploy-ledger/src:ro
      - ./examples:/opt/guile-deploy-ledger/examples:ro
    environment:
      - DEPLOY_LEDGER_DB=/var/lib/deploy-ledger/deployments.db
      - DEPLOY_LEDGER_PORT=8080
      - GUILE_LOAD_PATH=/opt/guile-deploy-ledger/src
    restart: unless-stopped
    networks:
      - deploy-ledger-net

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: deploy-ledger-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - deploy-ledger-net
    depends_on:
      - deploy-ledger

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: deploy-ledger-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - deploy-ledger-net
    depends_on:
      - prometheus

  # Development database browser
  adminer:
    image: adminer:latest
    container_name: deploy-ledger-adminer
    ports:
      - "8081:8080"
    networks:
      - deploy-ledger-net
    depends_on:
      - deploy-ledger

networks:
  deploy-ledger-net:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: