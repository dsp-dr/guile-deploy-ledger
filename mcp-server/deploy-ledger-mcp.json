{
  "name": "deploy-ledger",
  "version": "1.0.0",
  "description": "MCP server for Guile Deploy Ledger - deployment tracking and change management",
  "author": "DSP-DR",
  "license": "GPLv3+",
  "capabilities": {
    "resources": true,
    "tools": true,
    "prompts": true
  },
  "tools": [
    {
      "name": "record_deployment",
      "description": "Record a new deployment event",
      "inputSchema": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "Name of the service being deployed"
          },
          "version": {
            "type": "string",
            "description": "Version being deployed (e.g., v2.3.0)"
          },
          "environment": {
            "type": "string",
            "enum": ["development", "staging", "production"],
            "description": "Target environment"
          },
          "deployment_type": {
            "type": "string",
            "enum": ["blue-green", "canary", "rolling", "big-bang"],
            "description": "Deployment strategy"
          },
          "initiator": {
            "type": "string",
            "description": "Who or what initiated the deployment"
          },
          "metadata": {
            "type": "object",
            "description": "Additional deployment metadata",
            "properties": {
              "region": { "type": "string" },
              "cluster": { "type": "string" },
              "replicas": { "type": "integer" },
              "change_id": { "type": "string" },
              "approved_by": {
                "type": "array",
                "items": { "type": "string" }
              }
            }
          }
        },
        "required": ["service", "version", "environment", "deployment_type"]
      }
    },
    {
      "name": "record_rollback",
      "description": "Record a rollback event",
      "inputSchema": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "Name of the service being rolled back"
          },
          "from_version": {
            "type": "string",
            "description": "Version rolling back from"
          },
          "to_version": {
            "type": "string",
            "description": "Version rolling back to"
          },
          "reason": {
            "type": "string",
            "description": "Reason for rollback"
          },
          "deployment_id": {
            "type": "string",
            "description": "ID of the deployment being rolled back"
          }
        },
        "required": ["service", "from_version", "to_version", "reason"]
      }
    },
    {
      "name": "list_deployments",
      "description": "List deployment events with optional filters",
      "inputSchema": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "Filter by service name"
          },
          "environment": {
            "type": "string",
            "enum": ["development", "staging", "production"],
            "description": "Filter by environment"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "in-progress", "succeeded", "failed", "rolled-back"],
            "description": "Filter by status"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of results",
            "default": 10
          },
          "since": {
            "type": "string",
            "description": "ISO 8601 date to filter from"
          }
        }
      }
    },
    {
      "name": "get_deployment",
      "description": "Get details of a specific deployment",
      "inputSchema": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string",
            "description": "Deployment ID"
          }
        },
        "required": ["deployment_id"]
      }
    },
    {
      "name": "get_metrics",
      "description": "Get deployment metrics for analysis",
      "inputSchema": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "Service name (optional for all services)"
          },
          "metric": {
            "type": "string",
            "enum": ["frequency", "duration", "success_rate", "mttr", "lead_time"],
            "description": "Metric to retrieve"
          },
          "period_days": {
            "type": "integer",
            "description": "Period in days for metrics",
            "default": 30
          }
        },
        "required": ["metric"]
      }
    },
    {
      "name": "analyze_patterns",
      "description": "Analyze deployment patterns and trends",
      "inputSchema": {
        "type": "object",
        "properties": {
          "analysis_type": {
            "type": "string",
            "enum": ["failure_patterns", "peak_times", "service_dependencies", "risk_assessment"],
            "description": "Type of analysis to perform"
          },
          "period_days": {
            "type": "integer",
            "description": "Analysis period in days",
            "default": 90
          }
        },
        "required": ["analysis_type"]
      }
    },
    {
      "name": "export_data",
      "description": "Export deployment data in various formats",
      "inputSchema": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "enum": ["json", "csv", "markdown", "org-mode"],
            "description": "Export format"
          },
          "filters": {
            "type": "object",
            "description": "Optional filters",
            "properties": {
              "service": { "type": "string" },
              "environment": { "type": "string" },
              "date_from": { "type": "string" },
              "date_to": { "type": "string" }
            }
          }
        },
        "required": ["format"]
      }
    },
    {
      "name": "generate_visualization",
      "description": "Generate deployment visualizations",
      "inputSchema": {
        "type": "object",
        "properties": {
          "visualization_type": {
            "type": "string",
            "enum": ["timeline", "dependency_graph", "heatmap", "flow_diagram"],
            "description": "Type of visualization"
          },
          "format": {
            "type": "string",
            "enum": ["mermaid", "graphviz", "ascii"],
            "description": "Output format"
          },
          "service": {
            "type": "string",
            "description": "Optional service filter"
          }
        },
        "required": ["visualization_type", "format"]
      }
    },
    {
      "name": "check_health",
      "description": "Check deployment health and get recommendations",
      "inputSchema": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "Service to check (optional for all)"
          },
          "include_recommendations": {
            "type": "boolean",
            "description": "Include improvement recommendations",
            "default": true
          }
        }
      }
    },
    {
      "name": "update_deployment_status",
      "description": "Update the status of an ongoing deployment",
      "inputSchema": {
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string",
            "description": "Deployment ID to update"
          },
          "status": {
            "type": "string",
            "enum": ["in-progress", "succeeded", "failed", "rolled-back"],
            "description": "New status"
          },
          "message": {
            "type": "string",
            "description": "Optional status message"
          }
        },
        "required": ["deployment_id", "status"]
      }
    }
  ],
  "resources": [
    {
      "uri": "deploy-ledger://deployments",
      "name": "All Deployments",
      "description": "Access to all deployment records",
      "mimeType": "application/json"
    },
    {
      "uri": "deploy-ledger://services",
      "name": "Service Registry",
      "description": "List of all registered services with metadata",
      "mimeType": "application/json"
    },
    {
      "uri": "deploy-ledger://metrics/current",
      "name": "Current Metrics",
      "description": "Real-time deployment metrics dashboard",
      "mimeType": "application/json"
    },
    {
      "uri": "deploy-ledger://config",
      "name": "Configuration",
      "description": "Current deployment ledger configuration",
      "mimeType": "application/json"
    }
  ],
  "prompts": [
    {
      "name": "deployment_analysis",
      "description": "Analyze recent deployments and suggest improvements",
      "arguments": [
        {
          "name": "period_days",
          "description": "Number of days to analyze",
          "required": false,
          "default": 30
        }
      ]
    },
    {
      "name": "incident_report",
      "description": "Generate an incident report for a failed deployment",
      "arguments": [
        {
          "name": "deployment_id",
          "description": "ID of the failed deployment",
          "required": true
        }
      ]
    },
    {
      "name": "release_notes",
      "description": "Generate release notes from deployment data",
      "arguments": [
        {
          "name": "from_date",
          "description": "Start date for release notes",
          "required": true
        },
        {
          "name": "to_date",
          "description": "End date for release notes",
          "required": false
        }
      ]
    }
  ],
  "configuration": {
    "database_path": {
      "type": "string",
      "description": "Path to SQLite database",
      "default": "~/.deploy-ledger/deployments.db"
    },
    "api_port": {
      "type": "integer",
      "description": "Port for API server",
      "default": 8080
    },
    "webhook_secret": {
      "type": "string",
      "description": "Secret for webhook authentication",
      "env": "DEPLOY_LEDGER_WEBHOOK_SECRET"
    },
    "enable_metrics": {
      "type": "boolean",
      "description": "Enable Prometheus metrics endpoint",
      "default": true
    }
  }
}